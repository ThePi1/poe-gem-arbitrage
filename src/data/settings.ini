# Settings
# For true/false entries, put either True, or False. No quotes. Not case sensitive. You can even say 'on' / 'off', if you're crazy.
# For all other settings (strings or numbers) no need to put any quotes. Just the number or the string.
# For example: 'max_results = 32', 'print_trades = True', or 'gem_file = data/gems.csv'.

[general]
# How old can poe.ninja data be before we refresh? (int, in seconds)
max_data_staleness = 180

# Enable font operation 1 (True/False)
# (Transform a Skill Gem to be a random Transfigured Gem of the same colour)
print_font1 = True

# How much does (any) 20/20 uncorrupted skill gem cost for the above font operation? (int, in chaos)
font1_cost = 10

# Enable font operation 2 (True/False)
# (Transform a non-Transfigured Skill Gem to be a random Transfigured version)
print_font2 = True

# Enable corrupt operations in the console after calculations? (True/False)
print_corrupts = True

# Enable Vivid Watcher / Awakened Gem flips? (True/False)
print_watchers = True

# Enable debug messages? (True/False)
debug_messages = True

# Display how many results for gem / corrupt operations in the console? (int)
# By default this is large enough to just display everything.
max_results = 9999

# Pull currency prices (regrading lenses, divine) from poe.ninja? (True/False)
# You probably want this off if you're using it heavily. Bulk lens buys will diverge in price from poe.ninja.
# When false, this uses the currency prices in the market settings section.
pull_currency_prices = True

# Reverse the order of listings in the console so that the most profitable ones are on the bottom?
reverse_console_listings = False

# Don't display a corrupt operation if the start gem is less valuable than this (int, in chaos)
corrupt_operation_price_floor = 0

# What is the minimum number of data points from poe.ninja to use display a trade containing it? (int)
# (Consider this a low confidence bound)
# Currently only the corrupt operations use this bound.
low_confidence_count = 3

[filepaths]
# Filepaths for data files used -- edit if needed, but you shouldn't have to
ninja_json_filename = data/skillgem_response.json
ninja_json_currency_filename = data/currency_response.json
vivid_watcher_file = data/vivid_watcher.csv
vivid_watcher_alt_file = data/vivid_watcher_alt.csv
gem_attr_file = data/gemattr.csv
version_file = data/version.txt

# API URLs, these will need to be updated each league
# If you fork this repo, you'll need to change the version_url to match your new repository.
api_url = https://poe.ninja/api/data/itemoverview?league=Mercenaries&type=SkillGem
cur_api_url = https://poe.ninja/api/data/currencyoverview?league=Mercenaries&type=Currency
version_url = https://raw.githubusercontent.com/ThePi1/poe-gem-arbitrage/main/src/data/version.txt
project_url = https://github.com/ThePi1/poe-gem-arbitrage

[market_settings]
# When pull_currency_prices is off, the following prices for currency are used
# If you're buying lenses in bulk (or need to evaluate if it would be profitable to do so), this can be very helpful. (int, in chaos)
divine_price = 135

# These are manually set (for now) regardless. (int, in chaos)
vivid_watcher_price = 338
yellow_beast_price = 13

# This sets the distribution of "% chance of not being consumed" for red beasts - https://www.poewiki.net/wiki/Two-Hearted_Hunt
# These floats sum to 1, if they're under, it will be assumed the rest of the distribution is allocated to 0%. If over, it will complain at you and assume all 0%.
beast_consume_chance_0 = .75
beast_consume_chance_10 = 0
beast_consume_chance_20 = 0
beast_consume_chance_30 = 0
beast_consume_chance_40 = .25

# Use alternate data file/method - this is from a new dataset so use it at your own peril >:)
use_secondary_watcher_data = True

# This corresponds to the # of attempts in the dataset total
# Note that beasts with a chance of n% to not be consumed count for (1 / (1 - n%)) clicks
# 10% = 1/.9, 20% = 1/.8, etc.
secondary_watcher_data_attempt_count = 1808

# This sets the price of a "miss" in the alt method calculations, set it to the cheapest awakened gem price
awakened_miss_price = 25